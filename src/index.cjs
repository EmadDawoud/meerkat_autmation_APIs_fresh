'use strict';

var superagent = require('superagent');
var querystring = require('querystring');

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
* @module ApiClient
* @version 2.0.0
*/

/**
* Manages low level client-server communications, parameter marshalling, etc. There should not be any need for an
* application to use this class directly - the *Api and model classes provide the public API for the service. The
* contents of this file should be regarded as internal but are documented for completeness.
* @alias module:ApiClient
* @class
*/
class ApiClient {
    constructor() {
        /**
         * The base URL against which to resolve every API call's (relative) path.
         * @type {String}
         * @default https://virtserver.swaggerhub.com/EMADSAMU/MeerkatAuoAPIs/2.0.0
         */
        this.basePath = 'https://virtserver.swaggerhub.com/EMADSAMU/MeerkatAuoAPIs/2.0.0'.replace(/\/+$/, '');

        /**
         * The authentication methods to be included for all API calls.
         * @type {Array.<String>}
         */
        this.authentications = {
        };

        /**
         * The default HTTP headers to be included for all API calls.
         * @type {Array.<String>}
         * @default {}
         */
        this.defaultHeaders = {};

        /**
         * The default HTTP timeout for all API calls.
         * @type {Number}
         * @default 60000
         */
        this.timeout = 60000;

        /**
         * If set to false an additional timestamp parameter is added to all API GET calls to
         * prevent browser caching
         * @type {Boolean}
         * @default true
         */
        this.cache = true;

        /**
         * If set to true, the client will save the cookies from each server
         * response, and return them in the next request.
         * @default false
         */
        this.enableCookies = false;

        /*
         * Used to save and return cookies in a node.js (non-browser) setting,
         * if this.enableCookies is set to true.
         */
        if (typeof window === 'undefined') {
          this.agent = new superagent.agent();
        }

        /*
         * Allow user to override superagent agent
         */
         this.requestAgent = null;

    }

    /**
    * Returns a string representation for an actual parameter.
    * @param param The actual parameter.
    * @returns {String} The string representation of <code>param</code>.
    */
    paramToString(param) {
        if (param == undefined || param == null) {
            return '';
        }
        if (param instanceof Date) {
            return param.toJSON();
        }

        return param.toString();
    }

    /**
    * Builds full URL by appending the given path to the base URL and replacing path parameter place-holders with parameter values.
    * NOTE: query parameters are not handled here.
    * @param {String} path The path to append to the base URL.
    * @param {Object} pathParams The parameter values to append.
    * @returns {String} The encoded path with parameter values substituted.
    */
    buildUrl(path, pathParams) {
        if (!path.match(/^\//)) {
            path = '/' + path;
        }

        var url = this.basePath + path;
        url = url.replace(/\{([\w-]+)\}/g, (fullMatch, key) => {
            var value;
            if (pathParams.hasOwnProperty(key)) {
                value = this.paramToString(pathParams[key]);
            } else {
                value = fullMatch;
            }

            return encodeURIComponent(value);
        });

        return url;
    }

    /**
    * Checks whether the given content type represents JSON.<br>
    * JSON content type examples:<br>
    * <ul>
    * <li>application/json</li>
    * <li>application/json; charset=UTF8</li>
    * <li>APPLICATION/JSON</li>
    * </ul>
    * @param {String} contentType The MIME content type to check.
    * @returns {Boolean} <code>true</code> if <code>contentType</code> represents JSON, otherwise <code>false</code>.
    */
    isJsonMime(contentType) {
        return Boolean(contentType != null && contentType.match(/^application\/json(;.*)?$/i));
    }

    /**
    * Chooses a content type from the given array, with JSON preferred; i.e. return JSON if included, otherwise return the first.
    * @param {Array.<String>} contentTypes
    * @returns {String} The chosen content type, preferring JSON.
    */
    jsonPreferredMime(contentTypes) {
        for (var i = 0; i < contentTypes.length; i++) {
            if (this.isJsonMime(contentTypes[i])) {
                return contentTypes[i];
            }
        }

        return contentTypes[0];
    }

    /**
    * Checks whether the given parameter value represents file-like content.
    * @param param The parameter to check.
    * @returns {Boolean} <code>true</code> if <code>param</code> represents a file.
    */
    isFileParam(param) {
        // fs.ReadStream in Node.js and Electron (but not in runtime like browserify)
        if (typeof require === 'function') {
            let fs;
            try {
                fs = require('fs');
            } catch (err) {}
            if (fs && fs.ReadStream && param instanceof fs.ReadStream) {
                return true;
            }
        }

        // Buffer in Node.js
        if (typeof Buffer === 'function' && param instanceof Buffer) {
            return true;
        }

        // Blob in browser
        if (typeof Blob === 'function' && param instanceof Blob) {
            return true;
        }

        // File in browser (it seems File object is also instance of Blob, but keep this for safe)
        if (typeof File === 'function' && param instanceof File) {
            return true;
        }

        return false;
    }

    /**
    * Normalizes parameter values:
    * <ul>
    * <li>remove nils</li>
    * <li>keep files and arrays</li>
    * <li>format to string with `paramToString` for other cases</li>
    * </ul>
    * @param {Object.<String, Object>} params The parameters as object properties.
    * @returns {Object.<String, Object>} normalized parameters.
    */
    normalizeParams(params) {
        var newParams = {};
        for (var key in params) {
            if (params.hasOwnProperty(key) && params[key] != undefined && params[key] != null) {
                var value = params[key];
                if (this.isFileParam(value) || Array.isArray(value)) {
                    newParams[key] = value;
                } else {
                    newParams[key] = this.paramToString(value);
                }
            }
        }

        return newParams;
    }

    /**
    * Enumeration of collection format separator strategies.
    * @enum {String}
    * @readonly
    */
    static CollectionFormatEnum = {
        /**
         * Comma-separated values. Value: <code>csv</code>
         * @const
         */
        CSV: ',',

        /**
         * Space-separated values. Value: <code>ssv</code>
         * @const
         */
        SSV: ' ',

        /**
         * Tab-separated values. Value: <code>tsv</code>
         * @const
         */
        TSV: '\t',

        /**
         * Pipe(|)-separated values. Value: <code>pipes</code>
         * @const
         */
        PIPES: '|',

        /**
         * Native array. Value: <code>multi</code>
         * @const
         */
        MULTI: 'multi'
    };

    /**
    * Builds a string representation of an array-type actual parameter, according to the given collection format.
    * @param {Array} param An array parameter.
    * @param {module:ApiClient.CollectionFormatEnum} collectionFormat The array element separator strategy.
    * @returns {String|Array} A string representation of the supplied collection, using the specified delimiter. Returns
    * <code>param</code> as is if <code>collectionFormat</code> is <code>multi</code>.
    */
    buildCollectionParam(param, collectionFormat) {
        if (param == null) {
            return null;
        }
        switch (collectionFormat) {
            case 'csv':
                return param.map(this.paramToString).join(',');
            case 'ssv':
                return param.map(this.paramToString).join(' ');
            case 'tsv':
                return param.map(this.paramToString).join('\t');
            case 'pipes':
                return param.map(this.paramToString).join('|');
            case 'multi':
                //return the array directly as SuperAgent will handle it as expected
                return param.map(this.paramToString);
            default:
                throw new Error('Unknown collection format: ' + collectionFormat);
        }
    }

    /**
    * Applies authentication headers to the request.
    * @param {Object} request The request object created by a <code>superagent()</code> call.
    * @param {Array.<String>} authNames An array of authentication method names.
    */
    applyAuthToRequest(request, authNames) {
        authNames.forEach((authName) => {
            var auth = this.authentications[authName];
            switch (auth.type) {
                case 'basic':
                    if (auth.username || auth.password) {
                        request.auth(auth.username || '', auth.password || '');
                    }

                    break;
                case 'apiKey':
                    if (auth.apiKey) {
                        var data = {};
                        if (auth.apiKeyPrefix) {
                            data[auth.name] = auth.apiKeyPrefix + ' ' + auth.apiKey;
                        } else {
                            data[auth.name] = auth.apiKey;
                        }

                        if (auth['in'] === 'header') {
                            request.set(data);
                        } else {
                            request.query(data);
                        }
                    }

                    break;
                case 'oauth2':
                    if (auth.accessToken) {
                        request.set({'Authorization': 'Bearer ' + auth.accessToken});
                    }

                    break;
                default:
                    throw new Error('Unknown authentication type: ' + auth.type);
            }
        });
    }

    /**
    * Deserializes an HTTP response body into a value of the specified type.
    * @param {Object} response A SuperAgent response object.
    * @param {(String|Array.<String>|Object.<String, Object>|Function)} returnType The type to return. Pass a string for simple types
    * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To
    * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:
    * all properties on <code>data<code> will be converted to this type.
    * @returns A value of the specified type.
    */
    deserialize(response, returnType) {
        if (response == null || returnType == null || response.status == 204) {
            return null;
        }

        // Rely on SuperAgent for parsing response body.
        // See http://visionmedia.github.io/superagent/#parsing-response-bodies
        var data = response.body;
        if (data == null || (typeof data === 'object' && typeof data.length === 'undefined' && !Object.keys(data).length)) {
            // SuperAgent does not always produce a body; use the unparsed response as a fallback
            data = response.text;
        }

        return ApiClient.convertToType(data, returnType);
    }

    /**
    * Callback function to receive the result of the operation.
    * @callback module:ApiClient~callApiCallback
    * @param {String} error Error message, if any.
    * @param data The data returned by the service call.
    * @param {String} response The complete HTTP response.
    */

    /**
    * Invokes the REST service using the supplied settings and parameters.
    * @param {String} path The base URL to invoke.
    * @param {String} httpMethod The HTTP method to use.
    * @param {Object.<String, String>} pathParams A map of path parameters and their values.
    * @param {Object.<String, Object>} queryParams A map of query parameters and their values.
    * @param {Object.<String, Object>} headerParams A map of header parameters and their values.
    * @param {Object.<String, Object>} formParams A map of form parameters and their values.
    * @param {Object} bodyParam The value to pass as the request body.
    * @param {Array.<String>} authNames An array of authentication type names.
    * @param {Array.<String>} contentTypes An array of request MIME types.
    * @param {Array.<String>} accepts An array of acceptable response MIME types.
    * @param {(String|Array|ObjectFunction)} returnType The required type to return; can be a string for simple types or the
    * constructor for a complex type.
    * @param {module:ApiClient~callApiCallback} callback The callback function.
    * @returns {Object} The SuperAgent request object.
    */
    callApi(path, httpMethod, pathParams,
        queryParams, headerParams, formParams, bodyParam, authNames, contentTypes, accepts,
        returnType, callback) {

        var url = this.buildUrl(path, pathParams);
        var request = superagent(httpMethod, url);

        // apply authentications
        this.applyAuthToRequest(request, authNames);

        // set query parameters
        if (httpMethod.toUpperCase() === 'GET' && this.cache === false) {
            queryParams['_'] = new Date().getTime();
        }

        request.query(this.normalizeParams(queryParams));

        // set header parameters
        request.set(this.defaultHeaders).set(this.normalizeParams(headerParams));

        // set requestAgent if it is set by user
        if (this.requestAgent) {
          request.agent(this.requestAgent);
        }

        // set request timeout
        request.timeout(this.timeout);

        var contentType = this.jsonPreferredMime(contentTypes);
        if (contentType) {
            // Issue with superagent and multipart/form-data (https://github.com/visionmedia/superagent/issues/746)
            if(contentType != 'multipart/form-data') {
                request.type(contentType);
            }
        } else if (!request.header['Content-Type']) {
            request.type('application/json');
        }

        if (contentType === 'application/x-www-form-urlencoded') {
            request.send(querystring.stringify(this.normalizeParams(formParams)));
        } else if (contentType == 'multipart/form-data') {
            var _formParams = this.normalizeParams(formParams);
            for (var key in _formParams) {
                if (_formParams.hasOwnProperty(key)) {
                    if (this.isFileParam(_formParams[key])) {
                        // file field
                        request.attach(key, _formParams[key]);
                    } else {
                        request.field(key, _formParams[key]);
                    }
                }
            }
        } else if (bodyParam) {
            request.send(bodyParam);
        }

        var accept = this.jsonPreferredMime(accepts);
        if (accept) {
            request.accept(accept);
        }

        if (returnType === 'Blob') {
          request.responseType('blob');
        } else if (returnType === 'String') {
          request.responseType('string');
        }

        // Attach previously saved cookies, if enabled
        if (this.enableCookies){
            if (typeof window === 'undefined') {
                this.agent.attachCookies(request);
            }
            else {
                request.withCredentials();
            }
        }

        

        request.end((error, response) => {
            if (callback) {
                var data = null;
                if (!error) {
                    try {
                        data = this.deserialize(response, returnType);
                        if (this.enableCookies && typeof window === 'undefined'){
                            this.agent.saveCookies(response);
                        }
                    } catch (err) {
                        error = err;
                    }
                }

                callback(error, data, response);
            }
        });

        return request;
    }

    /**
    * Parses an ISO-8601 string representation of a date value.
    * @param {String} str The date value as a string.
    * @returns {Date} The parsed date object.
    */
    static parseDate(str) {
        return new Date(str);
    }

    /**
    * Converts a value to the specified type.
    * @param {(String|Object)} data The data to convert, as a string or object.
    * @param {(String|Array.<String>|Object.<String, Object>|Function)} type The type to return. Pass a string for simple types
    * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To
    * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:
    * all properties on <code>data<code> will be converted to this type.
    * @returns An instance of the specified type or null or undefined if data is null or undefined.
    */
    static convertToType(data, type) {
        if (data === null || data === undefined)
            return data

        switch (type) {
            case 'Boolean':
                return Boolean(data);
            case 'Integer':
                return parseInt(data, 10);
            case 'Number':
                return parseFloat(data);
            case 'String':
                return String(data);
            case 'Date':
                return ApiClient.parseDate(String(data));
            case 'Blob':
                return data;
            default:
                if (type === Object) {
                    // generic object, return directly
                    return data;
                } else if (typeof type === 'function') {
                    // for model type like: User
                    return type.constructFromObject(data);
                } else if (Array.isArray(type)) {
                    // for array type like: ['String']
                    var itemType = type[0];

                    return data.map((item) => {
                        return ApiClient.convertToType(item, itemType);
                    });
                } else if (typeof type === 'object') {
                    // for plain object type like: {'String': 'Integer'}
                    var keyType, valueType;
                    for (var k in type) {
                        if (type.hasOwnProperty(k)) {
                            keyType = k;
                            valueType = type[k];
                            break;
                        }
                    }

                    var result = {};
                    for (var k in data) {
                        if (data.hasOwnProperty(k)) {
                            var key = ApiClient.convertToType(k, keyType);
                            var value = ApiClient.convertToType(data[k], valueType);
                            result[key] = value;
                        }
                    }

                    return result;
                } else {
                    // for unknown type, return the data directly
                    return data;
                }
        }
    }

    /**
    * Constructs a new map or array model from REST data.
    * @param data {Object|Array} The REST data.
    * @param obj {Object|Array} The target object or array.
    */
    static constructFromObject(data, obj, itemType) {
        if (Array.isArray(data)) {
            for (var i = 0; i < data.length; i++) {
                if (data.hasOwnProperty(i))
                    obj[i] = ApiClient.convertToType(data[i], itemType);
            }
        } else {
            for (var k in data) {
                if (data.hasOwnProperty(k))
                    obj[k] = ApiClient.convertToType(data[k], itemType);
            }
        }
    };
}

/**
* The default API client implementation.
* @type {module:ApiClient}
*/
ApiClient.instance = new ApiClient();

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
 * The SNMPCollector model module.
 * @module model/SNMPCollector
 * @version 2.0.0
 */
class SNMPCollector {
  /**
   * Constructs a new <code>SNMPCollector</code>.
   * @alias module:model/SNMPCollector
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>SNMPCollector</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SNMPCollector} obj Optional instance to populate.
   * @return {module:model/SNMPCollector} The populated <code>SNMPCollector</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SNMPCollector();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('devicenum'))
        obj.devicenum = ApiClient.convertToType(data['devicenum'], 'Number');
      if (data.hasOwnProperty('kpinum'))
        obj.kpinum = ApiClient.convertToType(data['kpinum'], 'Number');
      if (data.hasOwnProperty('communitystr'))
        obj.communitystr = ApiClient.convertToType(data['communitystr'], 'String');
      if (data.hasOwnProperty('collectorvm'))
        obj.collectorvm = ApiClient.convertToType(data['collectorvm'], 'String');
      if (data.hasOwnProperty('collectorVM'))
        obj.collectorVM = ApiClient.convertToType(data['collectorVM'], Object);
    }
    return obj;
  }
}

/**
 * missing description
 * @member {Number} id
 */
SNMPCollector.prototype.id = undefined;

/**
 * missing description
 * @member {String} name
 */
SNMPCollector.prototype.name = undefined;

/**
 * missing description
 * @member {Number} devicenum
 */
SNMPCollector.prototype.devicenum = undefined;

/**
 * missing description
 * @member {Number} kpinum
 */
SNMPCollector.prototype.kpinum = undefined;

/**
 * missing description
 * @member {String} communitystr
 */
SNMPCollector.prototype.communitystr = undefined;

/**
 * missing description
 * @member {String} collectorvm
 */
SNMPCollector.prototype.collectorvm = undefined;

/**
 * @member {Object} collectorVM
 */
SNMPCollector.prototype.collectorVM = undefined;

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
 * The AllOfDeviceSNMPCollector model module.
 * @module model/AllOfDeviceSNMPCollector
 * @version 2.0.0
 */
class AllOfDeviceSNMPCollector {
  /**
   * Constructs a new <code>AllOfDeviceSNMPCollector</code>.
   * @alias module:model/AllOfDeviceSNMPCollector
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>AllOfDeviceSNMPCollector</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AllOfDeviceSNMPCollector} obj Optional instance to populate.
   * @return {module:model/AllOfDeviceSNMPCollector} The populated <code>AllOfDeviceSNMPCollector</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AllOfDeviceSNMPCollector();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('devicenum'))
        obj.devicenum = ApiClient.convertToType(data['devicenum'], 'Number');
      if (data.hasOwnProperty('kpinum'))
        obj.kpinum = ApiClient.convertToType(data['kpinum'], 'Number');
      if (data.hasOwnProperty('communitystr'))
        obj.communitystr = ApiClient.convertToType(data['communitystr'], 'String');
      if (data.hasOwnProperty('collectorvm'))
        obj.collectorvm = ApiClient.convertToType(data['collectorvm'], 'String');
      if (data.hasOwnProperty('collectorVM'))
        obj.collectorVM = ApiClient.convertToType(data['collectorVM'], Object);
    }
    return obj;
  }
}

/**
 * missing description
 * @member {Number} id
 */
AllOfDeviceSNMPCollector.prototype.id = undefined;

/**
 * missing description
 * @member {String} name
 */
AllOfDeviceSNMPCollector.prototype.name = undefined;

/**
 * missing description
 * @member {Number} devicenum
 */
AllOfDeviceSNMPCollector.prototype.devicenum = undefined;

/**
 * missing description
 * @member {Number} kpinum
 */
AllOfDeviceSNMPCollector.prototype.kpinum = undefined;

/**
 * missing description
 * @member {String} communitystr
 */
AllOfDeviceSNMPCollector.prototype.communitystr = undefined;

/**
 * missing description
 * @member {String} collectorvm
 */
AllOfDeviceSNMPCollector.prototype.collectorvm = undefined;

/**
 * @member {Object} collectorVM
 */
AllOfDeviceSNMPCollector.prototype.collectorVM = undefined;

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
 * The SNMPMIB model module.
 * @module model/SNMPMIB
 * @version 2.0.0
 */
class SNMPMIB {
  /**
   * Constructs a new <code>SNMPMIB</code>.
   * @alias module:model/SNMPMIB
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>SNMPMIB</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SNMPMIB} obj Optional instance to populate.
   * @return {module:model/SNMPMIB} The populated <code>SNMPMIB</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SNMPMIB();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('file'))
        obj.file = ApiClient.convertToType(data['file'], 'String');
    }
    return obj;
  }
}

/**
 * missing description
 * @member {Number} id
 */
SNMPMIB.prototype.id = undefined;

/**
 * missing description
 * @member {String} name
 */
SNMPMIB.prototype.name = undefined;

/**
 * missing description
 * @member {String} file
 */
SNMPMIB.prototype.file = undefined;

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
 * The AllOfMetricSNMPMIB model module.
 * @module model/AllOfMetricSNMPMIB
 * @version 2.0.0
 */
class AllOfMetricSNMPMIB {
  /**
   * Constructs a new <code>AllOfMetricSNMPMIB</code>.
   * @alias module:model/AllOfMetricSNMPMIB
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>AllOfMetricSNMPMIB</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AllOfMetricSNMPMIB} obj Optional instance to populate.
   * @return {module:model/AllOfMetricSNMPMIB} The populated <code>AllOfMetricSNMPMIB</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AllOfMetricSNMPMIB();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('file'))
        obj.file = ApiClient.convertToType(data['file'], 'String');
    }
    return obj;
  }
}

/**
 * missing description
 * @member {Number} id
 */
AllOfMetricSNMPMIB.prototype.id = undefined;

/**
 * missing description
 * @member {String} name
 */
AllOfMetricSNMPMIB.prototype.name = undefined;

/**
 * missing description
 * @member {String} file
 */
AllOfMetricSNMPMIB.prototype.file = undefined;

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
 * The AllOfMonObjSNMPMIB model module.
 * @module model/AllOfMonObjSNMPMIB
 * @version 2.0.0
 */
class AllOfMonObjSNMPMIB {
  /**
   * Constructs a new <code>AllOfMonObjSNMPMIB</code>.
   * @alias module:model/AllOfMonObjSNMPMIB
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>AllOfMonObjSNMPMIB</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AllOfMonObjSNMPMIB} obj Optional instance to populate.
   * @return {module:model/AllOfMonObjSNMPMIB} The populated <code>AllOfMonObjSNMPMIB</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AllOfMonObjSNMPMIB();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('file'))
        obj.file = ApiClient.convertToType(data['file'], 'String');
    }
    return obj;
  }
}

/**
 * missing description
 * @member {Number} id
 */
AllOfMonObjSNMPMIB.prototype.id = undefined;

/**
 * missing description
 * @member {String} name
 */
AllOfMonObjSNMPMIB.prototype.name = undefined;

/**
 * missing description
 * @member {String} file
 */
AllOfMonObjSNMPMIB.prototype.file = undefined;

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
 * The CollectorVM model module.
 * @module model/CollectorVM
 * @version 2.0.0
 */
class CollectorVM {
  /**
   * Constructs a new <code>CollectorVM</code>.
   * @alias module:model/CollectorVM
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>CollectorVM</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CollectorVM} obj Optional instance to populate.
   * @return {module:model/CollectorVM} The populated <code>CollectorVM</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CollectorVM();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('ip'))
        obj.ip = ApiClient.convertToType(data['ip'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('province'))
        obj.province = ApiClient.convertToType(data['province'], 'String');
    }
    return obj;
  }
}

/**
 * missing description
 * @member {Number} id
 */
CollectorVM.prototype.id = undefined;

/**
 * missing description
 * @member {String} ip
 */
CollectorVM.prototype.ip = undefined;

/**
 * missing description
 * @member {String} name
 */
CollectorVM.prototype.name = undefined;

/**
 * missing description
 * @member {String} province
 */
CollectorVM.prototype.province = undefined;

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
 * The AllOfSNMPCollectorCollectorVM model module.
 * @module model/AllOfSNMPCollectorCollectorVM
 * @version 2.0.0
 */
class AllOfSNMPCollectorCollectorVM {
  /**
   * Constructs a new <code>AllOfSNMPCollectorCollectorVM</code>.
   * @alias module:model/AllOfSNMPCollectorCollectorVM
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>AllOfSNMPCollectorCollectorVM</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AllOfSNMPCollectorCollectorVM} obj Optional instance to populate.
   * @return {module:model/AllOfSNMPCollectorCollectorVM} The populated <code>AllOfSNMPCollectorCollectorVM</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AllOfSNMPCollectorCollectorVM();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('ip'))
        obj.ip = ApiClient.convertToType(data['ip'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('province'))
        obj.province = ApiClient.convertToType(data['province'], 'String');
    }
    return obj;
  }
}

/**
 * missing description
 * @member {Number} id
 */
AllOfSNMPCollectorCollectorVM.prototype.id = undefined;

/**
 * missing description
 * @member {String} ip
 */
AllOfSNMPCollectorCollectorVM.prototype.ip = undefined;

/**
 * missing description
 * @member {String} name
 */
AllOfSNMPCollectorCollectorVM.prototype.name = undefined;

/**
 * missing description
 * @member {String} province
 */
AllOfSNMPCollectorCollectorVM.prototype.province = undefined;

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
 * The CommunityStr model module.
 * @module model/CommunityStr
 * @version 2.0.0
 */
class CommunityStr {
  /**
   * Constructs a new <code>CommunityStr</code>.
   * @alias module:model/CommunityStr
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>CommunityStr</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CommunityStr} obj Optional instance to populate.
   * @return {module:model/CommunityStr} The populated <code>CommunityStr</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CommunityStr();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
    }
    return obj;
  }
}

/**
 * missing description
 * @member {Number} id
 */
CommunityStr.prototype.id = undefined;

/**
 * missing description
 * @member {String} name
 */
CommunityStr.prototype.name = undefined;

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
 * The Device model module.
 * @module model/Device
 * @version 2.0.0
 */
class Device {
  /**
   * Constructs a new <code>Device</code>.
   * @alias module:model/Device
   * @class
   * @param sNMPCollector {Object} 
   */
  constructor(sNMPCollector) {
    this.sNMPCollector = sNMPCollector;
  }

  /**
   * Constructs a <code>Device</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Device} obj Optional instance to populate.
   * @return {module:model/Device} The populated <code>Device</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Device();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('wname'))
        obj.wname = ApiClient.convertToType(data['wname'], 'String');
      if (data.hasOwnProperty('model'))
        obj.model = ApiClient.convertToType(data['model'], 'String');
      if (data.hasOwnProperty('vendor'))
        obj.vendor = ApiClient.convertToType(data['vendor'], 'String');
      if (data.hasOwnProperty('ip'))
        obj.ip = ApiClient.convertToType(data['ip'], 'String');
      if (data.hasOwnProperty('communitystr'))
        obj.communitystr = ApiClient.convertToType(data['communitystr'], 'String');
      if (data.hasOwnProperty('devicetype'))
        obj.devicetype = ApiClient.convertToType(data['devicetype'], 'String');
      if (data.hasOwnProperty('province'))
        obj.province = ApiClient.convertToType(data['province'], 'String');
      if (data.hasOwnProperty('snmpcollector'))
        obj.snmpcollector = ApiClient.convertToType(data['snmpcollector'], 'String');
      if (data.hasOwnProperty('kpinum'))
        obj.kpinum = ApiClient.convertToType(data['kpinum'], 'Number');
      if (data.hasOwnProperty('monobj'))
        obj.monobj = ApiClient.convertToType(data['monobj'], 'String');
      if (data.hasOwnProperty('sNMPCollector'))
        obj.sNMPCollector = ApiClient.convertToType(data['sNMPCollector'], Object);
    }
    return obj;
  }
}

/**
 * missing description
 * @member {Number} id
 */
Device.prototype.id = undefined;

/**
 * missing description
 * @member {String} name
 */
Device.prototype.name = undefined;

/**
 * missing description
 * @member {String} wname
 */
Device.prototype.wname = undefined;

/**
 * missing description
 * @member {String} model
 */
Device.prototype.model = undefined;

/**
 * missing description
 * @member {String} vendor
 */
Device.prototype.vendor = undefined;

/**
 * missing description
 * @member {String} ip
 */
Device.prototype.ip = undefined;

/**
 * missing description
 * @member {String} communitystr
 */
Device.prototype.communitystr = undefined;

/**
 * missing description
 * @member {String} devicetype
 */
Device.prototype.devicetype = undefined;

/**
 * missing description
 * @member {String} province
 */
Device.prototype.province = undefined;

/**
 * missing description
 * @member {String} snmpcollector
 */
Device.prototype.snmpcollector = undefined;

/**
 * missing description
 * @member {Number} kpinum
 */
Device.prototype.kpinum = undefined;

/**
 * missing description
 * @member {String} monobj
 */
Device.prototype.monobj = undefined;

/**
 * @member {Object} sNMPCollector
 */
Device.prototype.sNMPCollector = undefined;

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
 * The DeviceType model module.
 * @module model/DeviceType
 * @version 2.0.0
 */
class DeviceType {
  /**
   * Constructs a new <code>DeviceType</code>.
   * @alias module:model/DeviceType
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>DeviceType</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DeviceType} obj Optional instance to populate.
   * @return {module:model/DeviceType} The populated <code>DeviceType</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DeviceType();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
    }
    return obj;
  }
}

/**
 * missing description
 * @member {Number} id
 */
DeviceType.prototype.id = undefined;

/**
 * missing description
 * @member {String} name
 */
DeviceType.prototype.name = undefined;

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
 * The Metric model module.
 * @module model/Metric
 * @version 2.0.0
 */
class Metric {
  /**
   * Constructs a new <code>Metric</code>.
   * @alias module:model/Metric
   * @class
   * @param sNMPMIB {Object} 
   */
  constructor(sNMPMIB) {
    this.sNMPMIB = sNMPMIB;
  }

  /**
   * Constructs a <code>Metric</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Metric} obj Optional instance to populate.
   * @return {module:model/Metric} The populated <code>Metric</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Metric();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('snmpmib'))
        obj.snmpmib = ApiClient.convertToType(data['snmpmib'], 'String');
      if (data.hasOwnProperty('oid'))
        obj.oid = ApiClient.convertToType(data['oid'], 'String');
      if (data.hasOwnProperty('monobj'))
        obj.monobj = ApiClient.convertToType(data['monobj'], 'String');
      if (data.hasOwnProperty('sNMPMIB'))
        obj.sNMPMIB = ApiClient.convertToType(data['sNMPMIB'], Object);
    }
    return obj;
  }
}

/**
 * missing description
 * @member {Number} id
 */
Metric.prototype.id = undefined;

/**
 * missing description
 * @member {String} name
 */
Metric.prototype.name = undefined;

/**
 * missing description
 * @member {String} snmpmib
 */
Metric.prototype.snmpmib = undefined;

/**
 * missing description
 * @member {String} oid
 */
Metric.prototype.oid = undefined;

/**
 * missing description
 * @member {String} monobj
 */
Metric.prototype.monobj = undefined;

/**
 * @member {Object} sNMPMIB
 */
Metric.prototype.sNMPMIB = undefined;

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
 * The MonObj model module.
 * @module model/MonObj
 * @version 2.0.0
 */
class MonObj {
  /**
   * Constructs a new <code>MonObj</code>.
   * @alias module:model/MonObj
   * @class
   * @param sNMPMIB {Object} 
   * @param metric {Array.<module:model/Metric>} 
   */
  constructor(sNMPMIB, metric) {
    this.sNMPMIB = sNMPMIB;
    this.metric = metric;
  }

  /**
   * Constructs a <code>MonObj</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MonObj} obj Optional instance to populate.
   * @return {module:model/MonObj} The populated <code>MonObj</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new MonObj();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('oid'))
        obj.oid = ApiClient.convertToType(data['oid'], 'String');
      if (data.hasOwnProperty('snmpmib'))
        obj.snmpmib = ApiClient.convertToType(data['snmpmib'], 'String');
      if (data.hasOwnProperty('sNMPMIB'))
        obj.sNMPMIB = ApiClient.convertToType(data['sNMPMIB'], Object);
      if (data.hasOwnProperty('metric'))
        obj.metric = ApiClient.convertToType(data['metric'], [Metric]);
    }
    return obj;
  }
}

/**
 * missing description
 * @member {Number} id
 */
MonObj.prototype.id = undefined;

/**
 * missing description
 * @member {String} name
 */
MonObj.prototype.name = undefined;

/**
 * missing description
 * @member {String} oid
 */
MonObj.prototype.oid = undefined;

/**
 * missing description
 * @member {String} snmpmib
 */
MonObj.prototype.snmpmib = undefined;

/**
 * @member {Object} sNMPMIB
 */
MonObj.prototype.sNMPMIB = undefined;

/**
 * @member {Array.<module:model/Metric>} metric
 */
MonObj.prototype.metric = undefined;

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
 * The Province model module.
 * @module model/Province
 * @version 2.0.0
 */
class Province {
  /**
   * Constructs a new <code>Province</code>.
   * @alias module:model/Province
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Province</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Province} obj Optional instance to populate.
   * @return {module:model/Province} The populated <code>Province</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Province();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
    }
    return obj;
  }
}

/**
 * missing description
 * @member {Number} id
 */
Province.prototype.id = undefined;

/**
 * missing description
 * @member {String} name
 */
Province.prototype.name = undefined;

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
 * The Vendor model module.
 * @module model/Vendor
 * @version 2.0.0
 */
class Vendor {
  /**
   * Constructs a new <code>Vendor</code>.
   * @alias module:model/Vendor
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Vendor</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Vendor} obj Optional instance to populate.
   * @return {module:model/Vendor} The populated <code>Vendor</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Vendor();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
    }
    return obj;
  }
}

/**
 * missing description
 * @member {Number} id
 */
Vendor.prototype.id = undefined;

/**
 * missing description
 * @member {String} name
 */
Vendor.prototype.name = undefined;

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
* CollectorVM service.
* @module api/CollectorVMApi
* @version 2.0.0
*/
class CollectorVMApi {

    /**
    * Constructs a new CollectorVMApi. 
    * @alias module:api/CollectorVMApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the addCollectorVM operation.
     * @callback moduleapi/CollectorVMApi~addCollectorVMCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds Collector VM
     * Adds Collector VM to the system
     * @param {Object} opts Optional parameters
     * @param {module:model/CollectorVM} opts.body Inventory item to add
     * @param {module:api/CollectorVMApi~addCollectorVMCallback} callback The callback function, accepting three arguments: error, data, response
     */
    addCollectorVM(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/collectorVM', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the searchCollectorVM operation.
     * @callback moduleapi/CollectorVMApi~searchCollectorVMCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CollectorVM>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * searches Collector VM
     * By passing in the appropriate options, you can search for available Collector VMs 
     * @param {module:api/CollectorVMApi~searchCollectorVMCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    searchCollectorVM(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [CollectorVM];

      return this.apiClient.callApi(
        '/collectorVM', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
* CommunityStr service.
* @module api/CommunityStrApi
* @version 2.0.0
*/
class CommunityStrApi {

    /**
    * Constructs a new CommunityStrApi. 
    * @alias module:api/CommunityStrApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the addCommunityStr operation.
     * @callback moduleapi/CommunityStrApi~addCommunityStrCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds Monitored Objects
     * Adds Community Strings to the system
     * @param {Object} opts Optional parameters
     * @param {module:model/CommunityStr} opts.body Inventory item to add
     * @param {module:api/CommunityStrApi~addCommunityStrCallback} callback The callback function, accepting three arguments: error, data, response
     */
    addCommunityStr(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/CommunityStr', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the searcCommunityStr operation.
     * @callback moduleapi/CommunityStrApi~searcCommunityStrCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CommunityStr>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * searches Community Strings
     * By passing in the appropriate options, you can search for available Community Strings 
     * @param {module:api/CommunityStrApi~searcCommunityStrCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    searcCommunityStr(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [CommunityStr];

      return this.apiClient.callApi(
        '/CommunityStr', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
* Device service.
* @module api/DeviceApi
* @version 2.0.0
*/
class DeviceApi {

    /**
    * Constructs a new DeviceApi. 
    * @alias module:api/DeviceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the addDevice operation.
     * @callback moduleapi/DeviceApi~addDeviceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds SNMP Devices
     * Adds Devices to the system
     * @param {Object} opts Optional parameters
     * @param {module:model/Device} opts.body Inventory item to add
     * @param {module:api/DeviceApi~addDeviceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    addDevice(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/Device', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the searchDevice operation.
     * @callback moduleapi/DeviceApi~searchDeviceCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Device>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * searches SNMP Devices
     * By passing in the appropriate options, you can search for available Devices 
     * @param {module:api/DeviceApi~searchDeviceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    searchDevice(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Device];

      return this.apiClient.callApi(
        '/Device', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
* DeviceType service.
* @module api/DeviceTypeApi
* @version 2.0.0
*/
class DeviceTypeApi {

    /**
    * Constructs a new DeviceTypeApi. 
    * @alias module:api/DeviceTypeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the addDeviceType operation.
     * @callback moduleapi/DeviceTypeApi~addDeviceTypeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds Device Types
     * Adds Device Types to the system
     * @param {Object} opts Optional parameters
     * @param {module:model/DeviceType} opts.body Inventory item to add
     * @param {module:api/DeviceTypeApi~addDeviceTypeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    addDeviceType(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/DeviceType', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the searchDeviceType operation.
     * @callback moduleapi/DeviceTypeApi~searchDeviceTypeCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DeviceType>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * searches Device Types
     * By passing in the appropriate options, you can search for available Device types 
     * @param {module:api/DeviceTypeApi~searchDeviceTypeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    searchDeviceType(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [DeviceType];

      return this.apiClient.callApi(
        '/DeviceType', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
* Metric service.
* @module api/MetricApi
* @version 2.0.0
*/
class MetricApi {

    /**
    * Constructs a new MetricApi. 
    * @alias module:api/MetricApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the addMetric operation.
     * @callback moduleapi/MetricApi~addMetricCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds Monitored Objects
     * Adds Metrics to the system
     * @param {Object} opts Optional parameters
     * @param {module:model/Metric} opts.body Metric to add
     * @param {module:api/MetricApi~addMetricCallback} callback The callback function, accepting three arguments: error, data, response
     */
    addMetric(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/Metric', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the searcMetric operation.
     * @callback moduleapi/MetricApi~searcMetricCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Metric>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * searches Monitored Objects
     * By passing in the appropriate options, you can search for available Metrics 
     * @param {module:api/MetricApi~searcMetricCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    searcMetric(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Metric];

      return this.apiClient.callApi(
        '/Metric', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
* MonObj service.
* @module api/MonObjApi
* @version 2.0.0
*/
class MonObjApi {

    /**
    * Constructs a new MonObjApi. 
    * @alias module:api/MonObjApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the addMonObj operation.
     * @callback moduleapi/MonObjApi~addMonObjCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds Monitored Objects
     * Adds Monitored Objects to the system
     * @param {Object} opts Optional parameters
     * @param {module:model/MonObj} opts.body Inventory item to add
     * @param {module:api/MonObjApi~addMonObjCallback} callback The callback function, accepting three arguments: error, data, response
     */
    addMonObj(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/MonObj', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the searchMonObj operation.
     * @callback moduleapi/MonObjApi~searchMonObjCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/MonObj>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * searches Monitored Objects
     * By passing in the appropriate options, you can search for available Monitoered Objects 
     * @param {module:api/MonObjApi~searchMonObjCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    searchMonObj(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [MonObj];

      return this.apiClient.callApi(
        '/MonObj', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
* Province service.
* @module api/ProvinceApi
* @version 2.0.0
*/
class ProvinceApi {

    /**
    * Constructs a new ProvinceApi. 
    * @alias module:api/ProvinceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the addProvince operation.
     * @callback moduleapi/ProvinceApi~addProvinceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds Province
     * Adds Province to the system
     * @param {Object} opts Optional parameters
     * @param {module:model/Province} opts.body Inventory item to add
     * @param {module:api/ProvinceApi~addProvinceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    addProvince(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/Province', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the searchProvince operation.
     * @callback moduleapi/ProvinceApi~searchProvinceCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Province>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * searches Province
     * By passing in the appropriate options, you can search for available Province 
     * @param {module:api/ProvinceApi~searchProvinceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    searchProvince(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Province];

      return this.apiClient.callApi(
        '/Province', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
* SNMPCollector service.
* @module api/SNMPCollectorApi
* @version 2.0.0
*/
class SNMPCollectorApi {

    /**
    * Constructs a new SNMPCollectorApi. 
    * @alias module:api/SNMPCollectorApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the addSNMPCollector operation.
     * @callback moduleapi/SNMPCollectorApi~addSNMPCollectorCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds SNMP Collector
     * Adds SNMP Collector to the system
     * @param {Object} opts Optional parameters
     * @param {module:model/SNMPCollector} opts.body Inventory item to add SNMPcCollector
     * @param {module:api/SNMPCollectorApi~addSNMPCollectorCallback} callback The callback function, accepting three arguments: error, data, response
     */
    addSNMPCollector(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/SNMPCollector', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the searchSNMPCollector operation.
     * @callback moduleapi/SNMPCollectorApi~searchSNMPCollectorCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/SNMPCollector>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * searches SNMP Collector
     * By passing in the appropriate options, you can search for available SNMP Collectors 
     * @param {module:api/SNMPCollectorApi~searchSNMPCollectorCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    searchSNMPCollector(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [SNMPCollector];

      return this.apiClient.callApi(
        '/SNMPCollector', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
* SNMPMIB service.
* @module api/SNMPMIBApi
* @version 2.0.0
*/
class SNMPMIBApi {

    /**
    * Constructs a new SNMPMIBApi. 
    * @alias module:api/SNMPMIBApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the addSNMPMIB operation.
     * @callback moduleapi/SNMPMIBApi~addSNMPMIBCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds SNMPMIB
     * Adds SNMP MIBs to the system
     * @param {Object} opts Optional parameters
     * @param {module:model/SNMPMIB} opts.body Inventory item to add
     * @param {module:api/SNMPMIBApi~addSNMPMIBCallback} callback The callback function, accepting three arguments: error, data, response
     */
    addSNMPMIB(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/SNMPMIB', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the searchSNMPMIB operation.
     * @callback moduleapi/SNMPMIBApi~searchSNMPMIBCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/SNMPMIB>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * searches SNMP MIB
     * By passing in the appropriate options, you can search for available SNMP MIBs 
     * @param {module:api/SNMPMIBApi~searchSNMPMIBCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    searchSNMPMIB(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [SNMPMIB];

      return this.apiClient.callApi(
        '/SNMPMIB', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}

/*
 * Meerkat Automation APIs
 * This API for quering and adding Meerkat SNMP Devices
 *
 * OpenAPI spec version: 2.0.0
 * Contact: emad.dawoud@telus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */

/**
* Vendor service.
* @module api/VendorApi
* @version 2.0.0
*/
class VendorApi {

    /**
    * Constructs a new VendorApi. 
    * @alias module:api/VendorApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the addVendor operation.
     * @callback moduleapi/VendorApi~addVendorCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds Monitored Objects
     * Adds Monitored Objects to the system
     * @param {Object} opts Optional parameters
     * @param {module:model/Vendor} opts.body Inventory item to add
     * @param {module:api/VendorApi~addVendorCallback} callback The callback function, accepting three arguments: error, data, response
     */
    addVendor(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/Vendor', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the searchVendor operation.
     * @callback moduleapi/VendorApi~searchVendorCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Vendor>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * searches Vendors
     * By passing in the appropriate options, you can search for available Vendors 
     * @param {module:api/VendorApi~searchVendorCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    searchVendor(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Vendor];

      return this.apiClient.callApi(
        '/Vendor', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}

exports.AllOfDeviceSNMPCollector = AllOfDeviceSNMPCollector;
exports.AllOfMetricSNMPMIB = AllOfMetricSNMPMIB;
exports.AllOfMonObjSNMPMIB = AllOfMonObjSNMPMIB;
exports.AllOfSNMPCollectorCollectorVM = AllOfSNMPCollectorCollectorVM;
exports.ApiClient = ApiClient;
exports.CollectorVM = CollectorVM;
exports.CollectorVMApi = CollectorVMApi;
exports.CommunityStr = CommunityStr;
exports.CommunityStrApi = CommunityStrApi;
exports.Device = Device;
exports.DeviceApi = DeviceApi;
exports.DeviceType = DeviceType;
exports.DeviceTypeApi = DeviceTypeApi;
exports.Metric = Metric;
exports.MetricApi = MetricApi;
exports.MonObj = MonObj;
exports.MonObjApi = MonObjApi;
exports.Province = Province;
exports.ProvinceApi = ProvinceApi;
exports.SNMPCollector = SNMPCollector;
exports.SNMPCollectorApi = SNMPCollectorApi;
exports.SNMPMIB = SNMPMIB;
exports.SNMPMIBApi = SNMPMIBApi;
exports.Vendor = Vendor;
exports.VendorApi = VendorApi;
